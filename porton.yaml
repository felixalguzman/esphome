esphome:
  name: porton
  friendly_name: porton
  platformio_options:
    board_build.mcu: esp32c3
    board_build.variant: esp32c3

esp32:
  variant: ESP32C3
  board: esp32dev
  framework:
    type: esp-idf
    sdkconfig_options:
      # CONFIG_BT_BLE_50_FEATURES_SUPPORTED: y
      # CONFIG_BT_BLE_42_FEATURES_SUPPORTED: y
      CONFIG_ESP_TASK_WDT_TIMEOUT_S: "10"
# Would not boot with the stock ESP32-C3 ESPHome 2023.9 default YAML config until I added/change the settings above for ESP32C3

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "yReheqUnJjeS4CqQKqOTfmMb5ds93pJJ8TKYldYiZz8="

ota:
  password: "93e23837ee8210e97a2fb2dc00b4bc32"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Porton Fallback Hotspot"
    password: "6ETvknRSYcQo"

captive_portal:

# The door contact sensor that is attached to Sonoff. 
# Not exposed to HA, instead used to set the 
# state of the cover.
binary_sensor:
  - platform: gpio
    pin: GPIO9
    name: "Garage Door Contact Sensor"
    id: contact_sensor
    internal: true
    filters:
      - invert:
      # Debounce the contact sensor to prevent rapid on/off/on events
      - delayed_on_off: 500ms
      
# This creates the actual garage door in HA. The state is based
# on the contact sensor. Opening/closing the garage door simply
# turns the relay on/off with a 0.5s delay in between.
cover:
  - platform: template
    device_class: garage
    name: "Garage Door"
    id: template_cov
    lambda: |-
      if (id(contact_sensor).state) {
        return COVER_OPEN;
      } else {
        return COVER_CLOSED;
      }
    open_action:
      - switch.turn_on: relay
      - delay: 0.5s
      - switch.turn_off: relay
    close_action:
      - switch.turn_on: relay
      - delay: 0.5s
      - switch.turn_off: relay

switch:
  - platform: gpio
    pin: 04
    id: relay
    name: "Gate Remote"
    # icon: "mdi:gate"
    internal: true
    # on_turn_on:
    #   - delay: 500ms
    #   - switch.turn_off: relay

# light:
#   - platform: binary
#     name: Light
#     id: light_1
#     output: relay_1

status_led:
  pin:
    number: GPIO6
    inverted: yes

# Send IP Address to HA
text_sensor:
  - platform: wifi_info
    ip_address:
      name: $friendly_name IP Address

# Send WiFi signal strength & uptime to HA
sensor:
  - platform: wifi_signal
    name: $friendly_name WiFi Strength
    update_interval: 60s
  - platform: uptime
    name: $friendly_name "Uptime"

web_server:
  port: 80
